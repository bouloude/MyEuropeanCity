setwd("~/Documents/MOOC/Coursera/Developing Data Products/Week 3/Project")
setwd("~/Documents/MOOC/Coursera/Developing Data Products/Week 3/MyCity")
?eurodist
names(eurodist)
eurodist
library(shiny)
?selectizeInput
eurodist[1,]
class(eurodist)
eurodist[1,1]
?eurodist
eurodist["Lyons"]
eurodist["Lyons",]
x<-as.matrix(eurodist)
x
x[1,]
names(x)
labels(eurodist)
class(labels(eurodist))
eurodist[labels="Barelona"]
lab<-labels(eurodist)
i<-which(lab=="Barcelona")
i
mat<-as.matrix(eurodist)
mat[i,]
compute <- function(city,type){
labels <- labels(eurodist)
i <- which(city==labels)
mat <- as.matrix(eurodist)
res <- 0
if (type == 1){
res <- mean(mat[i,])
}else{
res <- sd(mat[i,])
}
res
}
runApp()
runApp()
?textInput
runApp()
runApp()
runApp()
runApp()
?textInput
runApp()
runApp()
runApp()
runApp()
?textOutput
runApp()
runApp()
runApp()
runApp()
?p
?textOutput
?textOutput
runApp()
runApp()
setwd("~/Documents/MOOC/Coursera/Developing Data Products/Week 3/demo")
runApp()
setwd("~/Documents/MOOC/Coursera/Developing Data Products/Week 3/MyCity")
runApp()
runApp()
runApp()
runApp()
runApp()
compute <- function(city,type){
labels <- labels(eurodist)
i <- which(city==labels)
mat <- as.matrix(eurodist)
res <- 0
if (type == 1){
res <- mean(mat[i,])
}else{
res <- sd(mat[i,])
}
round(res,2)
}
runApp()
histo <- function(city){
labels <- labels(eurodist)
i <- which(city==labels)
mat <- as.matrix(eurodist)
avg <-comput(city,1)
hist(mat[i,],col="blue",breaks=100)
lines(c(mu,mu),c(0,150),col="red",lwd=5)
text(63,150,paste("mu = ", mu))
}
runApp()
runApp()
histo <- function(city){
labels <- labels(eurodist)
i <- which(city==labels)
mat <- as.matrix(eurodist)
avg <-compute(city,1)
hist(mat[i,],col="blue",breaks=100)
lines(c(mu,mu),c(0,150),col="red",lwd=5)
text(63,150,paste("mu = ", mu))
}
runApp()
histo <- function(city){
labels <- labels(eurodist)
i <- which(city==labels)
mat <- as.matrix(eurodist)
avg <-compute(city,1)
hist(mat[i,],col="blue",breaks=100)
lines(c(mu,mu),c(0,150),col="red",lwd=5)
text(63,150,paste("Avg = ", avg))
}
runApp()
histo <- function(city){
labels <- labels(eurodist)
i <- which(city==labels)
mat <- as.matrix(eurodist)
avg <-compute(city,1)
hist(mat[i,],col="blue",breaks=100)
lines(c(avg,avg),c(0,150),col="red",lwd=5)
text(63,150,paste("Avg = ", avg))
}
runApp()
histo <- function(city){
labels <- labels(eurodist)
i <- which(city==labels)
mat <- as.matrix(eurodist)
avg <-compute(city,1)
plot(mat[i,],col="blue",breaks=100,main="M")
lines(c(avg,avg),c(0,150),col="red",lwd=5)
text(63,150,paste("Avg = ", avg))
}
runApp()
runApp()
runApp()
histo <- function(city){
labels <- labels(eurodist)
i <- which(city==labels)
mat <- as.matrix(eurodist)
avg <-compute(city,1)
box(mat[i,],col="blue",main="M")
#lines(c(avg,avg),c(0,150),col="red",lwd=5)
#text(63,150,paste("Avg = ", avg))
}
runApp()
histo <- function(city){
labels <- labels(eurodist)
i <- which(city==labels)
mat <- as.matrix(eurodist)
#avg <-compute(city,1)
box(mat[i,],col="blue",main="M")
#lines(c(avg,avg),c(0,150),col="red",lwd=5)
#text(63,150,paste("Avg = ", avg))
}
runApp()
lab
i
box(mat[i,])
runApp()
runApp()
?leaflet
?gvisGeoChart
library(googleVis)
?gvisGeoChart
?gvisGeoChart(lab,locationvar="Country")
print(G,"chart")
G<-gvisGeoChart(lab,locationvar="Country")
lab
ds<-dataframe()
ds<-data.frame()
ds$City <-lab
ds<-data.frame(city=lab)
ds
G<-gvisGeoChart(ds,locationvar="city")
print(G)
plot(G)
G<-gvisGeoChart(ds,locationvar="city",options=list(region="150"))
plot(G)
ds<-data.frame(city=lab,d=rep(1,length(lab)))
G<-gvisGeoChart(ds,locationvar="city",options=list(region="150"))
plot(G)
G<-gvisGeoChart(ds,locationvar="city",colorvar="d",options=list(region="150"))
plot(G)
G<-gvisGeoChart(ds,locationvar="city",colorvar="d",options=list(region="150",dataMode="markers"))
plot(G)
G<-gvisGeoChart(ds,locationvar="city",colorvar="d",options=list(region="150",dataMode="regions"))
plot(G)
G<-gvisGeoChart(ds,locationvar="city",options=list(region="150",dataMode="regions"))
plot(G)
ds
G<-gvisGeoChart(ds,locationvar="city",options=list(region="150",dataMode="regions",width=600,hieght=400))
plot(G)
?Exports
head(Exports)
head(ds)
G<-gvisGeoChart(ds,locationvar='city',options=list(region="150",dataMode="regions",width=600,hieght=400))
plot(G)
G<-gvisGeoChart(ds,locationvar='city',options=list(region='Euroe',displayMode="markers",width=600,hieght=400))
plot(G)
G<-gvisGeoChart(ds,locationvar='city',options=list(region='Europe',displayMode="markers",width=600,hieght=400))
plot(G)
G<-gvisGeoChart(ds,locationvar='city',options=list(region="150",displayMode="markers",width=600,hieght=400))
plot(G)
map <- function(city){
labels <- labels(eurodist)
i <- which(city==labels)
mat <- as.matrix(eurodist)
col <- rep(1,length(labels))
col[i] <- 2
ds <- data.frame(city=labels,dist=mat[i,],color=col)
gvisGeoChart(ds,
locationvar='city',
colorvar='dist',
options=list(region="150",height=350,displayMode='marker',colors='col'))
}
runApp()
runApp()
?GvisMerge
?gvisMerg
?gvisMerge
runApp()
runApp()
runApp()
map <- function(city){
labels <- labels(eurodist)
i <- which(city==labels)
mat <- as.matrix(eurodist)
col <- rep("blue",length(labels))
col[i] <- "red"
ds <- data.frame(city=labels,dist=mat[i,],color=col)
gvisGeoChart(ds,
locationvar='city',
colorvar='dist',
options=list(region="150",height=350,displayMode='marker',colors='col'))
}
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
G<-map("Barcelona")
plot(G)
map <- function(city){
labels <- labels(eurodist)
i <- which(city==labels)
mat <- as.matrix(eurodist)
col <- rep(1,length(labels))
col[i] <- 0
ds <- data.frame(city=labels,dist=mat[i,])
gvisGeoChart(ds,
locationvar='city',
options=list(region="150",height=350,displayMode='marker'))
}
G<-map("Barcelona")
plot(G)
G<-gvisGeoChart(ds,locationvar='city',options=list(region="150",displayMode="markers",width=600,hieght=400))
plot(G)
map <- function(city){
labels <- labels(eurodist)
i <- which(city==labels)
mat <- as.matrix(eurodist)
col <- rep(1,length(labels))
col[i] <- 0
ds <- data.frame(city=labels,dist=mat[i,])
gvisGeoChart(ds,
locationvar='city',
options=list(region="150",height=350,displayMode='markers'))
}
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?sidebarPanel
library(googleVis)
runApp()
runApp()
runApp()
runApp()
date: 21/12/2014
date: as.Date("12-21-2014")
date: "12/21/2014"
date: 12/21/2014
?eurodist
G<-map("Barcelona")
save(G)
G<-map("Barcelona")
G$save("example.html",cdn=TRUE)
cat(G$html$chart, file="tmp.html")
G<-map("Barcelona")
G<-map("Barcelona")
cat(G$html$chart, file="tmp.html")
lab
mat
mat[1]
mat[1[,]]
mat[1,]
mat<-as.matrix(eurodist)
which.min(apply(mat,1,mean))
d<-rep(0,length(lab))
d[i]<-sum(mat[i,])
for (i in 1:length(d)){
d[i]<-sum(mat[i,])
}
d
which.min(d)
lab[13]
which.min(apply(mat,1,mean))
2. Lyons
